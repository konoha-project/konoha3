// generated by kimio kurmaitsu

K.import("konoha.float");

int succ(int n) {
  return n+1;
}
float minus(float n) {
  return -n;
}
    


void test() {
  int int2 = 2;
  float pi = 3.14159;;
  boolean btrue = true;
  System.p("2 < 2: " + (2 < 2)); // false
  System.p("2 < pi: " + (2 < pi)); // true
  System.p("2 < succ(1): " + (2 < succ(1))); // false
  System.p("2 < -pi: " + (2 < -pi)); // false
  System.p("2 < minus(-1.63): " + (2 < minus(-1.63))); // false
  System.p("2 < int2 + 1.0: " + (2 < int2 + 1.0)); // true
  System.p("2 < pi - int2: " + (2 < pi - int2)); // false
  System.p("2 < 3.14159: " + (2 < 3.14159)); // true
  System.p("2 < pi / 12: " + (2 < pi / 12)); // false
  System.p("pi < 2: " + (pi < 2)); // false
  System.p("pi < pi: " + (pi < pi)); // false
  System.p("pi < succ(1): " + (pi < succ(1))); // false
  System.p("pi < -pi: " + (pi < -pi)); // false
  System.p("pi < minus(-1.63): " + (pi < minus(-1.63))); // false
  System.p("pi < int2 + 1.0: " + (pi < int2 + 1.0)); // false
  System.p("pi < pi - int2: " + (pi < pi - int2)); // false
  System.p("pi < 3.14159: " + (pi < 3.14159)); // false
  System.p("pi < pi / 12: " + (pi < pi / 12)); // false
  System.p("succ(1) < 2: " + (succ(1) < 2)); // false
  System.p("succ(1) < pi: " + (succ(1) < pi)); // true
  System.p("succ(1) < succ(1): " + (succ(1) < succ(1))); // false
  System.p("succ(1) < -pi: " + (succ(1) < -pi)); // false
  System.p("succ(1) < minus(-1.63): " + (succ(1) < minus(-1.63))); // false
  System.p("succ(1) < int2 + 1.0: " + (succ(1) < int2 + 1.0)); // true
  System.p("succ(1) < pi - int2: " + (succ(1) < pi - int2)); // false
  System.p("succ(1) < 3.14159: " + (succ(1) < 3.14159)); // true
  System.p("succ(1) < pi / 12: " + (succ(1) < pi / 12)); // false
  System.p("-pi < 2: " + (-pi < 2)); // true
  System.p("-pi < pi: " + (-pi < pi)); // true
  System.p("-pi < succ(1): " + (-pi < succ(1))); // true
  System.p("-pi < -pi: " + (-pi < -pi)); // false
  System.p("-pi < minus(-1.63): " + (-pi < minus(-1.63))); // true
  System.p("-pi < int2 + 1.0: " + (-pi < int2 + 1.0)); // true
  System.p("-pi < pi - int2: " + (-pi < pi - int2)); // true
  System.p("-pi < 3.14159: " + (-pi < 3.14159)); // true
  System.p("-pi < pi / 12: " + (-pi < pi / 12)); // true
  System.p("minus(-1.63) < 2: " + (minus(-1.63) < 2)); // true
  System.p("minus(-1.63) < pi: " + (minus(-1.63) < pi)); // true
  System.p("minus(-1.63) < succ(1): " + (minus(-1.63) < succ(1))); // true
  System.p("minus(-1.63) < -pi: " + (minus(-1.63) < -pi)); // false
  System.p("minus(-1.63) < minus(-1.63): " + (minus(-1.63) < minus(-1.63))); // false
  System.p("minus(-1.63) < int2 + 1.0: " + (minus(-1.63) < int2 + 1.0)); // true
  System.p("minus(-1.63) < pi - int2: " + (minus(-1.63) < pi - int2)); // false
  System.p("minus(-1.63) < 3.14159: " + (minus(-1.63) < 3.14159)); // true
  System.p("minus(-1.63) < pi / 12: " + (minus(-1.63) < pi / 12)); // false
  System.p("int2 + 1.0 < 2: " + (int2 + 1.0 < 2)); // false
  System.p("int2 + 1.0 < pi: " + (int2 + 1.0 < pi)); // true
  System.p("int2 + 1.0 < succ(1): " + (int2 + 1.0 < succ(1))); // false
  System.p("int2 + 1.0 < -pi: " + (int2 + 1.0 < -pi)); // false
  System.p("int2 + 1.0 < minus(-1.63): " + (int2 + 1.0 < minus(-1.63))); // false
  System.p("int2 + 1.0 < int2 + 1.0: " + (int2 + 1.0 < int2 + 1.0)); // false
  System.p("int2 + 1.0 < pi - int2: " + (int2 + 1.0 < pi - int2)); // false
  System.p("int2 + 1.0 < 3.14159: " + (int2 + 1.0 < 3.14159)); // true
  System.p("int2 + 1.0 < pi / 12: " + (int2 + 1.0 < pi / 12)); // false
  System.p("pi - int2 < 2: " + (pi - int2 < 2)); // true
  System.p("pi - int2 < pi: " + (pi - int2 < pi)); // true
  System.p("pi - int2 < succ(1): " + (pi - int2 < succ(1))); // true
  System.p("pi - int2 < -pi: " + (pi - int2 < -pi)); // false
  System.p("pi - int2 < minus(-1.63): " + (pi - int2 < minus(-1.63))); // true
  System.p("pi - int2 < int2 + 1.0: " + (pi - int2 < int2 + 1.0)); // true
  System.p("pi - int2 < pi - int2: " + (pi - int2 < pi - int2)); // false
  System.p("pi - int2 < 3.14159: " + (pi - int2 < 3.14159)); // true
  System.p("pi - int2 < pi / 12: " + (pi - int2 < pi / 12)); // false
  System.p("3.14159 < 2: " + (3.14159 < 2)); // false
  System.p("3.14159 < pi: " + (3.14159 < pi)); // false
  System.p("3.14159 < succ(1): " + (3.14159 < succ(1))); // false
  System.p("3.14159 < -pi: " + (3.14159 < -pi)); // false
  System.p("3.14159 < minus(-1.63): " + (3.14159 < minus(-1.63))); // false
  System.p("3.14159 < int2 + 1.0: " + (3.14159 < int2 + 1.0)); // false
  System.p("3.14159 < pi - int2: " + (3.14159 < pi - int2)); // false
  System.p("3.14159 < 3.14159: " + (3.14159 < 3.14159)); // false
  System.p("3.14159 < pi / 12: " + (3.14159 < pi / 12)); // false
  System.p("pi / 12 < 2: " + (pi / 12 < 2)); // true
  System.p("pi / 12 < pi: " + (pi / 12 < pi)); // true
  System.p("pi / 12 < succ(1): " + (pi / 12 < succ(1))); // true
  System.p("pi / 12 < -pi: " + (pi / 12 < -pi)); // false
  System.p("pi / 12 < minus(-1.63): " + (pi / 12 < minus(-1.63))); // true
  System.p("pi / 12 < int2 + 1.0: " + (pi / 12 < int2 + 1.0)); // true
  System.p("pi / 12 < pi - int2: " + (pi / 12 < pi - int2)); // true
  System.p("pi / 12 < 3.14159: " + (pi / 12 < 3.14159)); // true
  System.p("pi / 12 < pi / 12: " + (pi / 12 < pi / 12)); // false
}

test();

// generated by kimio kurmaitsu

import("Type.Float");

float fabs(float v) {
    if(v < 0.0) return -v;
    return v;
}



void test() {
  int a = 1;
  float fa = 3.14159;
  assert(0.5 * 0.5 - 0.5 - (-0.250000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 0.5 - a - (-0.750000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 0.5 - fa - (-2.891590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 0.5 - fabs(-3.0) - (-2.750000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 0.5 - 3.14159 - (-2.891590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 0.5 - -fa - (3.391590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - 0.5 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - a - (-0.500000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - fa - (-2.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - fabs(-3.0) - (-2.500000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - 3.14159 - (-2.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * a - -fa - (3.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - 0.5 - (1.070795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - a - (0.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - fa - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - fabs(-3.0) - (-1.429205000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - 3.14159 - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fa - -fa - (4.712384999999999) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - 0.5 - (1.000000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - a - (0.500000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - fa - (-1.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - fabs(-3.0) - (-1.500000000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - 3.14159 - (-1.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * fabs(-3.0) - -fa - (4.641590000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - 0.5 - (1.070795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - a - (0.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - fa - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - fabs(-3.0) - (-1.429205000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - 3.14159 - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * 3.14159 - -fa - (4.712384999999999) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - 0.5 - (-2.070795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - a - (-2.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - fa - (-4.712384999999999) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - fabs(-3.0) - (-4.570795000000000) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - 3.14159 - (-4.712384999999999) <= FLOAT_EPSILON*10);
  assert(0.5 * -fa - -fa - (1.570795000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - 0.5 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - a - (-0.500000000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - fa - (-2.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - fabs(-3.0) - (-2.500000000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - 3.14159 - (-2.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * 0.5 - -fa - (3.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * a - 0.5 - (0.500000000000000) <= FLOAT_EPSILON*10);
  assert(a * a - a - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * a - fa - (-2.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * a - fabs(-3.0) - (-2.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * a - 3.14159 - (-2.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * a - -fa - (4.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - 0.5 - (2.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - a - (2.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - fabs(-3.0) - (0.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - 3.14159 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * fa - -fa - (6.283180000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - 0.5 - (2.500000000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - a - (2.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - fa - (-0.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - fabs(-3.0) - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - 3.14159 - (-0.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * fabs(-3.0) - -fa - (6.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - 0.5 - (2.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - a - (2.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - fabs(-3.0) - (0.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - 3.14159 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(a * 3.14159 - -fa - (6.283180000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - 0.5 - (-3.641590000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - a - (-4.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - fa - (-6.283180000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - fabs(-3.0) - (-6.141590000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - 3.14159 - (-6.283180000000000) <= FLOAT_EPSILON*10);
  assert(a * -fa - -fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - 0.5 - (1.070795000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - a - (0.570795000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - fa - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - fabs(-3.0) - (-1.429205000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - 3.14159 - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(fa * 0.5 - -fa - (4.712384999999999) <= FLOAT_EPSILON*10);
  assert(fa * a - 0.5 - (2.641590000000000) <= FLOAT_EPSILON*10);
  assert(fa * a - a - (2.141590000000000) <= FLOAT_EPSILON*10);
  assert(fa * a - fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(fa * a - fabs(-3.0) - (0.141590000000000) <= FLOAT_EPSILON*10);
  assert(fa * a - 3.14159 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(fa * a - -fa - (6.283180000000000) <= FLOAT_EPSILON*10);
  assert(fa * fa - 0.5 - (9.369587728099999) <= FLOAT_EPSILON*10);
  assert(fa * fa - a - (8.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * fa - fa - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(fa * fa - fabs(-3.0) - (6.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * fa - 3.14159 - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(fa * fa - -fa - (13.011177728099998) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - 0.5 - (8.924769999999999) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - a - (8.424769999999999) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - fa - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - fabs(-3.0) - (6.424769999999999) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - 3.14159 - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fa * fabs(-3.0) - -fa - (12.566360000000000) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - 0.5 - (9.369587728099999) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - a - (8.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - fa - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - fabs(-3.0) - (6.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - 3.14159 - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(fa * 3.14159 - -fa - (13.011177728099998) <= FLOAT_EPSILON*10);
  assert(fa * -fa - 0.5 - (-10.369587728099999) <= FLOAT_EPSILON*10);
  assert(fa * -fa - a - (-10.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * -fa - fa - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(fa * -fa - fabs(-3.0) - (-12.869587728099999) <= FLOAT_EPSILON*10);
  assert(fa * -fa - 3.14159 - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(fa * -fa - -fa - (-6.727997728099999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - 0.5 - (1.000000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - a - (0.500000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - fa - (-1.641590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - fabs(-3.0) - (-1.500000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - 3.14159 - (-1.641590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 0.5 - -fa - (4.641590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - 0.5 - (2.500000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - a - (2.000000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - fa - (-0.141590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - fabs(-3.0) - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - 3.14159 - (-0.141590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * a - -fa - (6.141590000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - 0.5 - (8.924769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - a - (8.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - fa - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - fabs(-3.0) - (6.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - 3.14159 - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fa - -fa - (12.566360000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - 0.5 - (8.500000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - a - (8.000000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - fa - (5.858410000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - fabs(-3.0) - (6.000000000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - 3.14159 - (5.858410000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * fabs(-3.0) - -fa - (12.141590000000001) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - 0.5 - (8.924769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - a - (8.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - fa - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - fabs(-3.0) - (6.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - 3.14159 - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * 3.14159 - -fa - (12.566360000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - 0.5 - (-9.924769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - a - (-10.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - fa - (-12.566360000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - fabs(-3.0) - (-12.424769999999999) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - 3.14159 - (-12.566360000000000) <= FLOAT_EPSILON*10);
  assert(fabs(-3.0) * -fa - -fa - (-6.283179999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - 0.5 - (1.070795000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - a - (0.570795000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - fa - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - fabs(-3.0) - (-1.429205000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - 3.14159 - (-1.570795000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 0.5 - -fa - (4.712384999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - 0.5 - (2.641590000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - a - (2.141590000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - fabs(-3.0) - (0.141590000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - 3.14159 - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * a - -fa - (6.283180000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - 0.5 - (9.369587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - a - (8.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - fa - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - fabs(-3.0) - (6.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - 3.14159 - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fa - -fa - (13.011177728099998) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - 0.5 - (8.924769999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - a - (8.424769999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - fa - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - fabs(-3.0) - (6.424769999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - 3.14159 - (6.283179999999999) <= FLOAT_EPSILON*10);
  assert(3.14159 * fabs(-3.0) - -fa - (12.566360000000000) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - 0.5 - (9.369587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - a - (8.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - fa - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - fabs(-3.0) - (6.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - 3.14159 - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * 3.14159 - -fa - (13.011177728099998) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - 0.5 - (-10.369587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - a - (-10.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - fa - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - fabs(-3.0) - (-12.869587728099999) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - 3.14159 - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(3.14159 * -fa - -fa - (-6.727997728099999) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - 0.5 - (-2.070795000000000) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - a - (-2.570795000000000) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - fa - (-4.712384999999999) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - fabs(-3.0) - (-4.570795000000000) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - 3.14159 - (-4.712384999999999) <= FLOAT_EPSILON*10);
  assert(-fa * 0.5 - -fa - (1.570795000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - 0.5 - (-3.641590000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - a - (-4.141590000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - fa - (-6.283180000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - fabs(-3.0) - (-6.141590000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - 3.14159 - (-6.283180000000000) <= FLOAT_EPSILON*10);
  assert(-fa * a - -fa - (0.000000000000000) <= FLOAT_EPSILON*10);
  assert(-fa * fa - 0.5 - (-10.369587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * fa - a - (-10.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * fa - fa - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(-fa * fa - fabs(-3.0) - (-12.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * fa - 3.14159 - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(-fa * fa - -fa - (-6.727997728099999) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - 0.5 - (-9.924769999999999) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - a - (-10.424769999999999) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - fa - (-12.566360000000000) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - fabs(-3.0) - (-12.424769999999999) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - 3.14159 - (-12.566360000000000) <= FLOAT_EPSILON*10);
  assert(-fa * fabs(-3.0) - -fa - (-6.283179999999999) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - 0.5 - (-10.369587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - a - (-10.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - fa - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - fabs(-3.0) - (-12.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - 3.14159 - (-13.011177728099998) <= FLOAT_EPSILON*10);
  assert(-fa * 3.14159 - -fa - (-6.727997728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - 0.5 - (9.369587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - a - (8.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - fa - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - fabs(-3.0) - (6.869587728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - 3.14159 - (6.727997728099999) <= FLOAT_EPSILON*10);
  assert(-fa * -fa - -fa - (13.011177728099998) <= FLOAT_EPSILON*10);
}

test();

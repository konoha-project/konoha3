// generated with geninttest by kimio kurmaitsu

import("Syntax.CStyleBitwiseOperator"); // konoha.int was obsolete
int succ(int n) {
	return n+1;
}
int minus(int n) {
	return -n;
}
    


void test() {
  int plus2 = 2;
  int minus2 = -2;
  boolean btrue = true;
  assert((2 + 2 >> 2) == 1);
  assert((2 + 2 >> plus2) == 1);
  assert((2 + 2 >> succ(1)) == 1);
  assert((2 + 2 >> -minus2) == 1);
  assert((2 + 2 >> -minus(2)) == 1);
  assert((2 + 2 >> ~(-3)) == 1);
  assert((2 + 2 >> (5-3)) == 1);
  assert((2 + plus2 >> 2) == 1);
  assert((2 + plus2 >> plus2) == 1);
  assert((2 + plus2 >> succ(1)) == 1);
  assert((2 + plus2 >> -minus2) == 1);
  assert((2 + plus2 >> -minus(2)) == 1);
  assert((2 + plus2 >> ~(-3)) == 1);
  assert((2 + plus2 >> (5-3)) == 1);
  assert((2 + succ(1) >> 2) == 1);
  assert((2 + succ(1) >> plus2) == 1);
  assert((2 + succ(1) >> succ(1)) == 1);
  assert((2 + succ(1) >> -minus2) == 1);
  assert((2 + succ(1) >> -minus(2)) == 1);
  assert((2 + succ(1) >> ~(-3)) == 1);
  assert((2 + succ(1) >> (5-3)) == 1);
  assert((2 + -minus2 >> 2) == 1);
  assert((2 + -minus2 >> plus2) == 1);
  assert((2 + -minus2 >> succ(1)) == 1);
  assert((2 + -minus2 >> -minus2) == 1);
  assert((2 + -minus2 >> -minus(2)) == 1);
  assert((2 + -minus2 >> ~(-3)) == 1);
  assert((2 + -minus2 >> (5-3)) == 1);
  assert((2 + -minus(2) >> 2) == 1);
  assert((2 + -minus(2) >> plus2) == 1);
  assert((2 + -minus(2) >> succ(1)) == 1);
  assert((2 + -minus(2) >> -minus2) == 1);
  assert((2 + -minus(2) >> -minus(2)) == 1);
  assert((2 + -minus(2) >> ~(-3)) == 1);
  assert((2 + -minus(2) >> (5-3)) == 1);
  assert((2 + ~(-3) >> 2) == 1);
  assert((2 + ~(-3) >> plus2) == 1);
  assert((2 + ~(-3) >> succ(1)) == 1);
  assert((2 + ~(-3) >> -minus2) == 1);
  assert((2 + ~(-3) >> -minus(2)) == 1);
  assert((2 + ~(-3) >> ~(-3)) == 1);
  assert((2 + ~(-3) >> (5-3)) == 1);
  assert((2 + (5-3) >> 2) == 1);
  assert((2 + (5-3) >> plus2) == 1);
  assert((2 + (5-3) >> succ(1)) == 1);
  assert((2 + (5-3) >> -minus2) == 1);
  assert((2 + (5-3) >> -minus(2)) == 1);
  assert((2 + (5-3) >> ~(-3)) == 1);
  assert((2 + (5-3) >> (5-3)) == 1);
  assert((plus2 + 2 >> 2) == 1);
  assert((plus2 + 2 >> plus2) == 1);
  assert((plus2 + 2 >> succ(1)) == 1);
  assert((plus2 + 2 >> -minus2) == 1);
  assert((plus2 + 2 >> -minus(2)) == 1);
  assert((plus2 + 2 >> ~(-3)) == 1);
  assert((plus2 + 2 >> (5-3)) == 1);
  assert((plus2 + plus2 >> 2) == 1);
  assert((plus2 + plus2 >> plus2) == 1);
  assert((plus2 + plus2 >> succ(1)) == 1);
  assert((plus2 + plus2 >> -minus2) == 1);
  assert((plus2 + plus2 >> -minus(2)) == 1);
  assert((plus2 + plus2 >> ~(-3)) == 1);
  assert((plus2 + plus2 >> (5-3)) == 1);
  assert((plus2 + succ(1) >> 2) == 1);
  assert((plus2 + succ(1) >> plus2) == 1);
  assert((plus2 + succ(1) >> succ(1)) == 1);
  assert((plus2 + succ(1) >> -minus2) == 1);
  assert((plus2 + succ(1) >> -minus(2)) == 1);
  assert((plus2 + succ(1) >> ~(-3)) == 1);
  assert((plus2 + succ(1) >> (5-3)) == 1);
  assert((plus2 + -minus2 >> 2) == 1);
  assert((plus2 + -minus2 >> plus2) == 1);
  assert((plus2 + -minus2 >> succ(1)) == 1);
  assert((plus2 + -minus2 >> -minus2) == 1);
  assert((plus2 + -minus2 >> -minus(2)) == 1);
  assert((plus2 + -minus2 >> ~(-3)) == 1);
  assert((plus2 + -minus2 >> (5-3)) == 1);
  assert((plus2 + -minus(2) >> 2) == 1);
  assert((plus2 + -minus(2) >> plus2) == 1);
  assert((plus2 + -minus(2) >> succ(1)) == 1);
  assert((plus2 + -minus(2) >> -minus2) == 1);
  assert((plus2 + -minus(2) >> -minus(2)) == 1);
  assert((plus2 + -minus(2) >> ~(-3)) == 1);
  assert((plus2 + -minus(2) >> (5-3)) == 1);
  assert((plus2 + ~(-3) >> 2) == 1);
  assert((plus2 + ~(-3) >> plus2) == 1);
  assert((plus2 + ~(-3) >> succ(1)) == 1);
  assert((plus2 + ~(-3) >> -minus2) == 1);
  assert((plus2 + ~(-3) >> -minus(2)) == 1);
  assert((plus2 + ~(-3) >> ~(-3)) == 1);
  assert((plus2 + ~(-3) >> (5-3)) == 1);
  assert((plus2 + (5-3) >> 2) == 1);
  assert((plus2 + (5-3) >> plus2) == 1);
  assert((plus2 + (5-3) >> succ(1)) == 1);
  assert((plus2 + (5-3) >> -minus2) == 1);
  assert((plus2 + (5-3) >> -minus(2)) == 1);
  assert((plus2 + (5-3) >> ~(-3)) == 1);
  assert((plus2 + (5-3) >> (5-3)) == 1);
  assert((succ(1) + 2 >> 2) == 1);
  assert((succ(1) + 2 >> plus2) == 1);
  assert((succ(1) + 2 >> succ(1)) == 1);
  assert((succ(1) + 2 >> -minus2) == 1);
  assert((succ(1) + 2 >> -minus(2)) == 1);
  assert((succ(1) + 2 >> ~(-3)) == 1);
  assert((succ(1) + 2 >> (5-3)) == 1);
  assert((succ(1) + plus2 >> 2) == 1);
  assert((succ(1) + plus2 >> plus2) == 1);
  assert((succ(1) + plus2 >> succ(1)) == 1);
  assert((succ(1) + plus2 >> -minus2) == 1);
  assert((succ(1) + plus2 >> -minus(2)) == 1);
  assert((succ(1) + plus2 >> ~(-3)) == 1);
  assert((succ(1) + plus2 >> (5-3)) == 1);
  assert((succ(1) + succ(1) >> 2) == 1);
  assert((succ(1) + succ(1) >> plus2) == 1);
  assert((succ(1) + succ(1) >> succ(1)) == 1);
  assert((succ(1) + succ(1) >> -minus2) == 1);
  assert((succ(1) + succ(1) >> -minus(2)) == 1);
  assert((succ(1) + succ(1) >> ~(-3)) == 1);
  assert((succ(1) + succ(1) >> (5-3)) == 1);
  assert((succ(1) + -minus2 >> 2) == 1);
  assert((succ(1) + -minus2 >> plus2) == 1);
  assert((succ(1) + -minus2 >> succ(1)) == 1);
  assert((succ(1) + -minus2 >> -minus2) == 1);
  assert((succ(1) + -minus2 >> -minus(2)) == 1);
  assert((succ(1) + -minus2 >> ~(-3)) == 1);
  assert((succ(1) + -minus2 >> (5-3)) == 1);
  assert((succ(1) + -minus(2) >> 2) == 1);
  assert((succ(1) + -minus(2) >> plus2) == 1);
  assert((succ(1) + -minus(2) >> succ(1)) == 1);
  assert((succ(1) + -minus(2) >> -minus2) == 1);
  assert((succ(1) + -minus(2) >> -minus(2)) == 1);
  assert((succ(1) + -minus(2) >> ~(-3)) == 1);
  assert((succ(1) + -minus(2) >> (5-3)) == 1);
  assert((succ(1) + ~(-3) >> 2) == 1);
  assert((succ(1) + ~(-3) >> plus2) == 1);
  assert((succ(1) + ~(-3) >> succ(1)) == 1);
  assert((succ(1) + ~(-3) >> -minus2) == 1);
  assert((succ(1) + ~(-3) >> -minus(2)) == 1);
  assert((succ(1) + ~(-3) >> ~(-3)) == 1);
  assert((succ(1) + ~(-3) >> (5-3)) == 1);
  assert((succ(1) + (5-3) >> 2) == 1);
  assert((succ(1) + (5-3) >> plus2) == 1);
  assert((succ(1) + (5-3) >> succ(1)) == 1);
  assert((succ(1) + (5-3) >> -minus2) == 1);
  assert((succ(1) + (5-3) >> -minus(2)) == 1);
  assert((succ(1) + (5-3) >> ~(-3)) == 1);
  assert((succ(1) + (5-3) >> (5-3)) == 1);
  assert((-minus2 + 2 >> 2) == 1);
  assert((-minus2 + 2 >> plus2) == 1);
  assert((-minus2 + 2 >> succ(1)) == 1);
  assert((-minus2 + 2 >> -minus2) == 1);
  assert((-minus2 + 2 >> -minus(2)) == 1);
  assert((-minus2 + 2 >> ~(-3)) == 1);
  assert((-minus2 + 2 >> (5-3)) == 1);
  assert((-minus2 + plus2 >> 2) == 1);
  assert((-minus2 + plus2 >> plus2) == 1);
  assert((-minus2 + plus2 >> succ(1)) == 1);
  assert((-minus2 + plus2 >> -minus2) == 1);
  assert((-minus2 + plus2 >> -minus(2)) == 1);
  assert((-minus2 + plus2 >> ~(-3)) == 1);
  assert((-minus2 + plus2 >> (5-3)) == 1);
  assert((-minus2 + succ(1) >> 2) == 1);
  assert((-minus2 + succ(1) >> plus2) == 1);
  assert((-minus2 + succ(1) >> succ(1)) == 1);
  assert((-minus2 + succ(1) >> -minus2) == 1);
  assert((-minus2 + succ(1) >> -minus(2)) == 1);
  assert((-minus2 + succ(1) >> ~(-3)) == 1);
  assert((-minus2 + succ(1) >> (5-3)) == 1);
  assert((-minus2 + -minus2 >> 2) == 1);
  assert((-minus2 + -minus2 >> plus2) == 1);
  assert((-minus2 + -minus2 >> succ(1)) == 1);
  assert((-minus2 + -minus2 >> -minus2) == 1);
  assert((-minus2 + -minus2 >> -minus(2)) == 1);
  assert((-minus2 + -minus2 >> ~(-3)) == 1);
  assert((-minus2 + -minus2 >> (5-3)) == 1);
  assert((-minus2 + -minus(2) >> 2) == 1);
  assert((-minus2 + -minus(2) >> plus2) == 1);
  assert((-minus2 + -minus(2) >> succ(1)) == 1);
  assert((-minus2 + -minus(2) >> -minus2) == 1);
  assert((-minus2 + -minus(2) >> -minus(2)) == 1);
  assert((-minus2 + -minus(2) >> ~(-3)) == 1);
  assert((-minus2 + -minus(2) >> (5-3)) == 1);
  assert((-minus2 + ~(-3) >> 2) == 1);
  assert((-minus2 + ~(-3) >> plus2) == 1);
  assert((-minus2 + ~(-3) >> succ(1)) == 1);
  assert((-minus2 + ~(-3) >> -minus2) == 1);
  assert((-minus2 + ~(-3) >> -minus(2)) == 1);
  assert((-minus2 + ~(-3) >> ~(-3)) == 1);
  assert((-minus2 + ~(-3) >> (5-3)) == 1);
  assert((-minus2 + (5-3) >> 2) == 1);
  assert((-minus2 + (5-3) >> plus2) == 1);
  assert((-minus2 + (5-3) >> succ(1)) == 1);
  assert((-minus2 + (5-3) >> -minus2) == 1);
  assert((-minus2 + (5-3) >> -minus(2)) == 1);
  assert((-minus2 + (5-3) >> ~(-3)) == 1);
  assert((-minus2 + (5-3) >> (5-3)) == 1);
  assert((-minus(2) + 2 >> 2) == 1);
  assert((-minus(2) + 2 >> plus2) == 1);
  assert((-minus(2) + 2 >> succ(1)) == 1);
  assert((-minus(2) + 2 >> -minus2) == 1);
  assert((-minus(2) + 2 >> -minus(2)) == 1);
  assert((-minus(2) + 2 >> ~(-3)) == 1);
  assert((-minus(2) + 2 >> (5-3)) == 1);
  assert((-minus(2) + plus2 >> 2) == 1);
  assert((-minus(2) + plus2 >> plus2) == 1);
  assert((-minus(2) + plus2 >> succ(1)) == 1);
  assert((-minus(2) + plus2 >> -minus2) == 1);
  assert((-minus(2) + plus2 >> -minus(2)) == 1);
  assert((-minus(2) + plus2 >> ~(-3)) == 1);
  assert((-minus(2) + plus2 >> (5-3)) == 1);
  assert((-minus(2) + succ(1) >> 2) == 1);
  assert((-minus(2) + succ(1) >> plus2) == 1);
  assert((-minus(2) + succ(1) >> succ(1)) == 1);
  assert((-minus(2) + succ(1) >> -minus2) == 1);
  assert((-minus(2) + succ(1) >> -minus(2)) == 1);
  assert((-minus(2) + succ(1) >> ~(-3)) == 1);
  assert((-minus(2) + succ(1) >> (5-3)) == 1);
  assert((-minus(2) + -minus2 >> 2) == 1);
  assert((-minus(2) + -minus2 >> plus2) == 1);
  assert((-minus(2) + -minus2 >> succ(1)) == 1);
  assert((-minus(2) + -minus2 >> -minus2) == 1);
  assert((-minus(2) + -minus2 >> -minus(2)) == 1);
  assert((-minus(2) + -minus2 >> ~(-3)) == 1);
  assert((-minus(2) + -minus2 >> (5-3)) == 1);
  assert((-minus(2) + -minus(2) >> 2) == 1);
  assert((-minus(2) + -minus(2) >> plus2) == 1);
  assert((-minus(2) + -minus(2) >> succ(1)) == 1);
  assert((-minus(2) + -minus(2) >> -minus2) == 1);
  assert((-minus(2) + -minus(2) >> -minus(2)) == 1);
  assert((-minus(2) + -minus(2) >> ~(-3)) == 1);
  assert((-minus(2) + -minus(2) >> (5-3)) == 1);
  assert((-minus(2) + ~(-3) >> 2) == 1);
  assert((-minus(2) + ~(-3) >> plus2) == 1);
  assert((-minus(2) + ~(-3) >> succ(1)) == 1);
  assert((-minus(2) + ~(-3) >> -minus2) == 1);
  assert((-minus(2) + ~(-3) >> -minus(2)) == 1);
  assert((-minus(2) + ~(-3) >> ~(-3)) == 1);
  assert((-minus(2) + ~(-3) >> (5-3)) == 1);
  assert((-minus(2) + (5-3) >> 2) == 1);
  assert((-minus(2) + (5-3) >> plus2) == 1);
  assert((-minus(2) + (5-3) >> succ(1)) == 1);
  assert((-minus(2) + (5-3) >> -minus2) == 1);
  assert((-minus(2) + (5-3) >> -minus(2)) == 1);
  assert((-minus(2) + (5-3) >> ~(-3)) == 1);
  assert((-minus(2) + (5-3) >> (5-3)) == 1);
  assert((~(-3) + 2 >> 2) == 1);
  assert((~(-3) + 2 >> plus2) == 1);
  assert((~(-3) + 2 >> succ(1)) == 1);
  assert((~(-3) + 2 >> -minus2) == 1);
  assert((~(-3) + 2 >> -minus(2)) == 1);
  assert((~(-3) + 2 >> ~(-3)) == 1);
  assert((~(-3) + 2 >> (5-3)) == 1);
  assert((~(-3) + plus2 >> 2) == 1);
  assert((~(-3) + plus2 >> plus2) == 1);
  assert((~(-3) + plus2 >> succ(1)) == 1);
  assert((~(-3) + plus2 >> -minus2) == 1);
  assert((~(-3) + plus2 >> -minus(2)) == 1);
  assert((~(-3) + plus2 >> ~(-3)) == 1);
  assert((~(-3) + plus2 >> (5-3)) == 1);
  assert((~(-3) + succ(1) >> 2) == 1);
  assert((~(-3) + succ(1) >> plus2) == 1);
  assert((~(-3) + succ(1) >> succ(1)) == 1);
  assert((~(-3) + succ(1) >> -minus2) == 1);
  assert((~(-3) + succ(1) >> -minus(2)) == 1);
  assert((~(-3) + succ(1) >> ~(-3)) == 1);
  assert((~(-3) + succ(1) >> (5-3)) == 1);
  assert((~(-3) + -minus2 >> 2) == 1);
  assert((~(-3) + -minus2 >> plus2) == 1);
  assert((~(-3) + -minus2 >> succ(1)) == 1);
  assert((~(-3) + -minus2 >> -minus2) == 1);
  assert((~(-3) + -minus2 >> -minus(2)) == 1);
  assert((~(-3) + -minus2 >> ~(-3)) == 1);
  assert((~(-3) + -minus2 >> (5-3)) == 1);
  assert((~(-3) + -minus(2) >> 2) == 1);
  assert((~(-3) + -minus(2) >> plus2) == 1);
  assert((~(-3) + -minus(2) >> succ(1)) == 1);
  assert((~(-3) + -minus(2) >> -minus2) == 1);
  assert((~(-3) + -minus(2) >> -minus(2)) == 1);
  assert((~(-3) + -minus(2) >> ~(-3)) == 1);
  assert((~(-3) + -minus(2) >> (5-3)) == 1);
  assert((~(-3) + ~(-3) >> 2) == 1);
  assert((~(-3) + ~(-3) >> plus2) == 1);
  assert((~(-3) + ~(-3) >> succ(1)) == 1);
  assert((~(-3) + ~(-3) >> -minus2) == 1);
  assert((~(-3) + ~(-3) >> -minus(2)) == 1);
  assert((~(-3) + ~(-3) >> ~(-3)) == 1);
  assert((~(-3) + ~(-3) >> (5-3)) == 1);
  assert((~(-3) + (5-3) >> 2) == 1);
  assert((~(-3) + (5-3) >> plus2) == 1);
  assert((~(-3) + (5-3) >> succ(1)) == 1);
  assert((~(-3) + (5-3) >> -minus2) == 1);
  assert((~(-3) + (5-3) >> -minus(2)) == 1);
  assert((~(-3) + (5-3) >> ~(-3)) == 1);
  assert((~(-3) + (5-3) >> (5-3)) == 1);
  assert(((5-3) + 2 >> 2) == 1);
  assert(((5-3) + 2 >> plus2) == 1);
  assert(((5-3) + 2 >> succ(1)) == 1);
  assert(((5-3) + 2 >> -minus2) == 1);
  assert(((5-3) + 2 >> -minus(2)) == 1);
  assert(((5-3) + 2 >> ~(-3)) == 1);
  assert(((5-3) + 2 >> (5-3)) == 1);
  assert(((5-3) + plus2 >> 2) == 1);
  assert(((5-3) + plus2 >> plus2) == 1);
  assert(((5-3) + plus2 >> succ(1)) == 1);
  assert(((5-3) + plus2 >> -minus2) == 1);
  assert(((5-3) + plus2 >> -minus(2)) == 1);
  assert(((5-3) + plus2 >> ~(-3)) == 1);
  assert(((5-3) + plus2 >> (5-3)) == 1);
  assert(((5-3) + succ(1) >> 2) == 1);
  assert(((5-3) + succ(1) >> plus2) == 1);
  assert(((5-3) + succ(1) >> succ(1)) == 1);
  assert(((5-3) + succ(1) >> -minus2) == 1);
  assert(((5-3) + succ(1) >> -minus(2)) == 1);
  assert(((5-3) + succ(1) >> ~(-3)) == 1);
  assert(((5-3) + succ(1) >> (5-3)) == 1);
  assert(((5-3) + -minus2 >> 2) == 1);
  assert(((5-3) + -minus2 >> plus2) == 1);
  assert(((5-3) + -minus2 >> succ(1)) == 1);
  assert(((5-3) + -minus2 >> -minus2) == 1);
  assert(((5-3) + -minus2 >> -minus(2)) == 1);
  assert(((5-3) + -minus2 >> ~(-3)) == 1);
  assert(((5-3) + -minus2 >> (5-3)) == 1);
  assert(((5-3) + -minus(2) >> 2) == 1);
  assert(((5-3) + -minus(2) >> plus2) == 1);
  assert(((5-3) + -minus(2) >> succ(1)) == 1);
  assert(((5-3) + -minus(2) >> -minus2) == 1);
  assert(((5-3) + -minus(2) >> -minus(2)) == 1);
  assert(((5-3) + -minus(2) >> ~(-3)) == 1);
  assert(((5-3) + -minus(2) >> (5-3)) == 1);
  assert(((5-3) + ~(-3) >> 2) == 1);
  assert(((5-3) + ~(-3) >> plus2) == 1);
  assert(((5-3) + ~(-3) >> succ(1)) == 1);
  assert(((5-3) + ~(-3) >> -minus2) == 1);
  assert(((5-3) + ~(-3) >> -minus(2)) == 1);
  assert(((5-3) + ~(-3) >> ~(-3)) == 1);
  assert(((5-3) + ~(-3) >> (5-3)) == 1);
  assert(((5-3) + (5-3) >> 2) == 1);
  assert(((5-3) + (5-3) >> plus2) == 1);
  assert(((5-3) + (5-3) >> succ(1)) == 1);
  assert(((5-3) + (5-3) >> -minus2) == 1);
  assert(((5-3) + (5-3) >> -minus(2)) == 1);
  assert(((5-3) + (5-3) >> ~(-3)) == 1);
  assert(((5-3) + (5-3) >> (5-3)) == 1);
}

test();

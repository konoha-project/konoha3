// generated by kimio kurmaitsu

int succ(int n) {
  return n+1;
}
int minus(int n) {
  return -n;
}



void test() {
  int a = 1;
  int b = -1;
  boolean btrue = true
  assert((1 / 1 + 1) == 2);
  assert((1 / 1 + a) == 2);
  assert((1 / 1 + succ(0)) == 2);
  assert((1 / a + 1) == 2);
  assert((1 / a + a) == 2);
  assert((1 / a + succ(0)) == 2);
  assert((1 / succ(0) + 1) == 2);
  assert((1 / succ(0) + a) == 2);
  assert((1 / succ(0) + succ(0)) == 2);
  assert((a / 1 + 1) == 2);
  assert((a / 1 + a) == 2);
  assert((a / 1 + succ(0)) == 2);
  assert((a / a + 1) == 2);
  assert((a / a + a) == 2);
  assert((a / a + succ(0)) == 2);
  assert((a / succ(0) + 1) == 2);
  assert((a / succ(0) + a) == 2);
  assert((a / succ(0) + succ(0)) == 2);
  assert((succ(0) / 1 + 1) == 2);
  assert((succ(0) / 1 + a) == 2);
  assert((succ(0) / 1 + succ(0)) == 2);
  assert((succ(0) / a + 1) == 2);
  assert((succ(0) / a + a) == 2);
  assert((succ(0) / a + succ(0)) == 2);
  assert((succ(0) / succ(0) + 1) == 2);
  assert((succ(0) / succ(0) + a) == 2);
  assert((succ(0) / succ(0) + succ(0)) == 2);
}

test();
